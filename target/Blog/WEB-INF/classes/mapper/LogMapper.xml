<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.night.dao.LogDao">
    <resultMap id="LogResult" type="Log">
        <result property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="summary" column="summary"/>
        <result property="publishedDate" column="releaseDate"/>
        <result property="readedNum" column="clickHit"/>
        <result property="commentNum" column="replyHit"/>
        <result property="content" column="content"/>
        <result property="keyWord" column="keyWord"/>
        <association property="logType" column="typeId" select="com.night.dao.LogTypeDao.findById"></association>
    </resultMap>
    <select id="findLogsGroupByDate" resultMap="LogResult">
        select DATE_FORMAT(releaseDate,'%Y年%m月') as releaseDateStr ,count(*) as blogCount from t_blog GROUP BY DATE_FORMAT(releaseDate,'%Y年%m月') ORDER BY DATE_FORMAT(releaseDate,'%Y年%m月') DESC;
    </select>

    <select id="findAll" parameterType="Map" resultMap="LogResult">
        select * from t_blog
        <where>
            <if test="title!=null and title!=''">
                and title like #{title}
            </if>
            <if test="typeId!=null and typeId!=''">
                and typeId = #{typeId}
            </if>
            <if test="releaseDateStr!=null and releaseDateStr!='' ">
                and DATE_FORMAT(releaseDate,'%Y年%m月') = #{releaseDateStr}
            </if>
            <if test="keyWord!=null and title!=''">
                and keyWord like '%${keyWord}%'
            </if>
        </where>
        order by releaseDate desc
        <if test="start!=null and size!=null">
            limit #{start},#{size}
        </if>
    </select>
    <select id="findById" parameterType="Integer" resultMap="LogResult">
        select * from t_blog where id=#{id}
    </select>

    <select id="findLogsByLogTypeId" parameterType="Integer" resultMap="LogResult">
        select * from t_blog where typeId=#{id}
    </select>

    <select id="findLogByPreId" parameterType="Map" resultMap="LogResult">
        select * from t_blog
        <where>
            <if test="typeId!=null and typeId!=''">
                and typeId=#{typeId}
            </if>
            and id&lt;#{id}
        </where>
        Order by id DESC limit 1
    </select>
    <select id="findLogByNextId" parameterType="Map" resultMap="LogResult">
        select * from t_blog
        <where>
            <if test="typeId!=null and typeId!=''">
                and typeId=#{typeId}
            </if>
            and id&gt;#{id}
        </where>
        Order by id ASC limit 1
    </select>
</mapper>